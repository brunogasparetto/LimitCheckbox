/*!
 *  Project: LimitCheckbox
 *  Description: JQuery Plugin: Block the checkboxes when reach the limit
 *  Author: Bruno Gasparetto <brunogasparetto@gmail.com>
 *  License: MIT
 */
(function(c){var b="limitcheckbox",d={limit:5,onBlock:null,onRelease:null};function a(f,e){this.options=c.extend({},d,e);this.element=c(f);this.checkboxes=this.element.find("input[type=checkbox]");this.init()}a.prototype={init:function(){var f=this.element.data("limitCheckbox"),e=this;e.options.limit=f?parseInt(f,10):e.options.limit;e.remaining=e.options.limit;e.element.on("change."+b,"input[type=checkbox]",function(g){e.change(this,g)})},change:function(f,g){var e=this.remaining;if(f.checked){this.remaining-=1}else{this.remaining+=1}if(!e){this.open();this.trigger("onRelease",f,g)}else{if(!this.remaining){this.close();this.trigger("onBlock",f,g)}}},close:function(){this.checkboxes.not(":checked").attr("disabled",true)},open:function(){this.checkboxes.attr("disabled",false)},trigger:function(g,e,f){if(!this.options[g]){return}this.options[g].call(e,f,this.options.limit)}};c.fn[b]=function(e){if(typeof e==="number"){e={limit:e}}return this.each(function(){if(!c.data(this,"plugin_"+b)){c.data(this,"plugin_"+b,new a(this,e))}})}}(jQuery));